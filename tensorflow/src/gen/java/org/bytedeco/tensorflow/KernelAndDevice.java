// Targeted by JavaCPP version 1.5.1-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.tensorflow;

import org.bytedeco.tensorflow.Allocator;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.tensorflow.global.tensorflow.*;


// KernelAndDevice encapsulates an instantiated kernel and the device it is on.
//
// Also see:
// https://www.tensorflow.org/code/tensorflow/core/common_runtime/kernel_benchmark_testlib.h
// and
// https://www.tensorflow.org/code/tensorflow/core/kernels/ops_testutil.h
@Namespace("tensorflow") @NoOffset @Properties(inherit = org.bytedeco.tensorflow.presets.tensorflow.class)
public class KernelAndDevice extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public KernelAndDevice(Pointer p) { super(p); }

  // Populates 'out' with a kernel appropriate for 'ndef'.
  //
  // The provided FunctionLibraryRuntime MUST outlive all calls to
  // Run() on the returned KernelAndDevice.
  public static native @ByVal Status Init(@Const @ByRef NodeDef ndef, FunctionLibraryRuntime flr,
                       @Cast("std::function<void(std::function<void()>)>*") Pointer runner,
                       KernelAndDevice out);

  public KernelAndDevice(Rendezvous rendez, @Cast("bool") boolean log_memory) { super((Pointer)null); allocate(rendez, log_memory); }
  private native void allocate(Rendezvous rendez, @Cast("bool") boolean log_memory);

  public KernelAndDevice(
        Rendezvous rendez, @Cast("bool") boolean log_memory,
        @MoveUniquePtr CollectiveExecutor.Handle collective_executor) { super((Pointer)null); allocate(rendez, log_memory, collective_executor); }
  private native void allocate(
        Rendezvous rendez, @Cast("bool") boolean log_memory,
        @MoveUniquePtr CollectiveExecutor.Handle collective_executor);

  // TODO(ashankar): Handle list-valued inputs.
  public native @ByVal Status Run(TensorVector inputs, TensorVector outputs,
               NodeExecStats stats, StepStats step_stats,
               GraphCollector graph_collector);

  public native @ByVal Status Run(ScopedStepContainer step_container, TensorVector inputs,
               TensorVector outputs, NodeExecStats stats,
               StepStats step_stats, GraphCollector graph_collector);

  public native Device OutputDevice(int idx);

  public native @Const OpKernel kernel();

  public native Device device();

  public native @Const @ByRef DataTypeVector output_dtypes();
}
