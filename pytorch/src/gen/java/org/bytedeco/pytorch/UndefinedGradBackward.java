// Targeted by JavaCPP version 1.5.11-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.pytorch;

import org.bytedeco.pytorch.Allocator;
import org.bytedeco.pytorch.Function;
import org.bytedeco.pytorch.functions.*;
import org.bytedeco.pytorch.chrono.*;
import org.bytedeco.pytorch.Module;
import org.bytedeco.javacpp.annotation.Cast;
import org.bytedeco.pytorch.presets.torch.IntrusivePtr;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import static org.bytedeco.openblas.global.openblas_nolapack.*;
import static org.bytedeco.openblas.global.openblas.*;

import static org.bytedeco.pytorch.global.torch.*;


@Namespace("torch::autograd") @Properties(inherit = org.bytedeco.pytorch.presets.torch.class)
public class UndefinedGradBackward extends Node {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public UndefinedGradBackward(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public UndefinedGradBackward(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public UndefinedGradBackward position(long position) {
        return (UndefinedGradBackward)super.position(position);
    }
    @Override public UndefinedGradBackward getPointer(long i) {
        return new UndefinedGradBackward((Pointer)this).offsetAddress(i);
    }

  public UndefinedGradBackward(@ByRef(true) EdgeVector next_edges) { super((Pointer)null); allocate(next_edges); }
  private native void allocate(@ByRef(true) EdgeVector next_edges);

  public UndefinedGradBackward() { super((Pointer)null); allocate(); }
  private native void allocate();

  public native @ByVal TensorVector apply(@ByRef(true) TensorVector inputs);

  public native void compiled_args(@ByRef CompiledNodeArgs args);
  public native @ByVal TensorVector apply_with_saved(
        @Const @ByRef TensorVector inputs,
        @ByRef SwapSavedVariables saved);
}
