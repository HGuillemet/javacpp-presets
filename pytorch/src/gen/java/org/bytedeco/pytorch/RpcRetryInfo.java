// Targeted by JavaCPP version 1.5.11-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.pytorch;

import org.bytedeco.pytorch.Allocator;
import org.bytedeco.pytorch.Function;
import org.bytedeco.pytorch.functions.*;
import org.bytedeco.pytorch.chrono.*;
import org.bytedeco.pytorch.Module;
import org.bytedeco.javacpp.annotation.Cast;
import org.bytedeco.pytorch.helper.*;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import static org.bytedeco.openblas.global.openblas_nolapack.*;
import static org.bytedeco.openblas.global.openblas.*;

import static org.bytedeco.pytorch.global.torch.*;


// Struct that stores all the metadata needed to retry a given RPC.
@Namespace("torch::distributed::rpc") @NoOffset @Properties(inherit = org.bytedeco.pytorch.presets.torch.class)
public class RpcRetryInfo extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public RpcRetryInfo(Pointer p) { super(p); }

  public RpcRetryInfo(
        @Const @ByRef WorkerInfo to,
        @IntrusivePtr("torch::distributed::rpc::Message") @Cast({"", "c10::intrusive_ptr<torch::distributed::rpc::Message>&"}) Message message,
        @IntrusivePtr("c10::ivalue::Future") @Cast({"", "c10::intrusive_ptr<c10::ivalue::Future>&"}) Future originalFuture,
        int retryCount,
        @ByVal RpcRetryOptions options) { super((Pointer)null); allocate(to, message, originalFuture, retryCount, options); }
  private native void allocate(
        @Const @ByRef WorkerInfo to,
        @IntrusivePtr("torch::distributed::rpc::Message") @Cast({"", "c10::intrusive_ptr<torch::distributed::rpc::Message>&"}) Message message,
        @IntrusivePtr("c10::ivalue::Future") @Cast({"", "c10::intrusive_ptr<c10::ivalue::Future>&"}) Future originalFuture,
        int retryCount,
        @ByVal RpcRetryOptions options);

  @MemberGetter public native @Const @ByRef WorkerInfo to_();
  public native @IntrusivePtr("torch::distributed::rpc::Message") @Cast({"", "c10::intrusive_ptr<torch::distributed::rpc::Message>&"}) Message message_(); public native RpcRetryInfo message_(Message setter);
  // Future that is returned to the caller of sendWithRetries().
  public native @IntrusivePtr("c10::ivalue::Future") @Cast({"", "c10::intrusive_ptr<c10::ivalue::Future>&"}) Future originalFuture_(); public native RpcRetryInfo originalFuture_(Future setter);
  // Number of send attempts completed so far.
  public native int retryCount_(); public native RpcRetryInfo retryCount_(int setter);
  public native @ByRef RpcRetryOptions options_(); public native RpcRetryInfo options_(RpcRetryOptions setter);
}
