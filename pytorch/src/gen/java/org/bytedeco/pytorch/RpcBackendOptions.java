// Targeted by JavaCPP version 1.5.11-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.pytorch;

import org.bytedeco.pytorch.Allocator;
import org.bytedeco.pytorch.Function;
import org.bytedeco.pytorch.functions.*;
import org.bytedeco.pytorch.chrono.*;
import org.bytedeco.pytorch.Module;
import org.bytedeco.javacpp.annotation.Cast;
import org.bytedeco.pytorch.helper.*;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import static org.bytedeco.openblas.global.openblas_nolapack.*;
import static org.bytedeco.openblas.global.openblas.*;

import static org.bytedeco.pytorch.global.torch.*;


@Namespace("torch::distributed::rpc") @NoOffset @Properties(inherit = org.bytedeco.pytorch.presets.torch.class)
public class RpcBackendOptions extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public RpcBackendOptions(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public RpcBackendOptions(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public RpcBackendOptions position(long position) {
        return (RpcBackendOptions)super.position(position);
    }
    @Override public RpcBackendOptions getPointer(long i) {
        return new RpcBackendOptions((Pointer)this).offsetAddress(i);
    }

  public RpcBackendOptions() { super((Pointer)null); allocate(); }
  private native void allocate();

  public RpcBackendOptions(float rpcTimeoutSeconds, @StdString BytePointer initMethod) { super((Pointer)null); allocate(rpcTimeoutSeconds, initMethod); }
  private native void allocate(float rpcTimeoutSeconds, @StdString BytePointer initMethod);
  public RpcBackendOptions(float rpcTimeoutSeconds, @StdString String initMethod) { super((Pointer)null); allocate(rpcTimeoutSeconds, initMethod); }
  private native void allocate(float rpcTimeoutSeconds, @StdString String initMethod);

  public native float rpcTimeoutSeconds(); public native RpcBackendOptions rpcTimeoutSeconds(float setter);
  public native @StdString BytePointer initMethod(); public native RpcBackendOptions initMethod(BytePointer setter);
}
